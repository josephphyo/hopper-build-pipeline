version: 2.1

executors:
  docker-executor:
    docker:
    - image: circleci/python:3.8 # Use an image that has Docker installed

jobs:
  build-and-push:
    executor: docker-executor
    steps:
    - checkout # Checkout your source code

    - setup_remote_docker: # Set up Docker
        version: 20.10.7
        docker_layer_caching: true

    - run:
        name: Build and push Docker image to DockerHub
        command: |
          # Set environment variables
          export IMAGETAG=cptmarvel-$CIRCLE_BUILD_NUM  # You can use a different tag if desired

          # Build the Docker image
          docker build -t phyominhtun/hopper-circleci-argocd:$IMAGETAG .

          # Authenticate with your Docker registry (e.g., Docker Hub)
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

          # Push the Docker image to the registry
          docker push phyominhtun/hopper-circleci-argocd:$IMAGETAG

  Update_kube_manifest:
    docker:
    - image: cimg/base:2023.06
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Updating Kubernetes Menifest file from ArgoCD & Kubernetes Manifest Repository
        command: "TAG=cptmarvel-$CIRCLE_BUILD_NUM\n((TAG--))\ngit clone https://github.com/josephphyo/argocd-app-configs.git\ngit config --global user.email \"phyominhtun1990@gmail.com\"\ngit config --global user.name \"josephphyo\"\ncd argocd-app-configs/hopper/hopper-v1\nsed -i \"s/build-.*/build-$TAG/g\" hopper-deploy-v1.yaml\ngit add .\ngit commit -m \"new build with imgTag build-$TAG\"\ngit config credential.helper 'cache --timeout=120'\ngit push -q https://$GITHUB_PERSONAL_TOKEN@github.com/josephphyo/argocd-app-configs.git main \n#magic___^_^___line\n"
workflows:
  version: 2
  hopper-build-flow:
    jobs:
    - build-and-push:
        filters:
          branches:
            only:
            - master
    - Update_kube_manifest:
        requires:
        - build-and-push
