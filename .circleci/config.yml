version: 2.1
commands:
  setup:
    steps:
    - checkout
    - run:
        name: Setup buildx and qemu
        command: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
          sudo apt-get install -y binfmt-support
    - run:
        name: Check versions
        command: "qemu-aarch64-static --version\nupdate-binfmts --version \n"
    - run:
        name: Create builder
        command: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker buildx create --name arm-builder
          docker buildx use arm-builder
          docker buildx inspect --bootstrap
jobs:
  build-and-push:
    machine:
      image: ubuntu-2004:202010-01
    steps:
    - setup
    - run:
        name: Login to Docker Hub
        command: |
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - run:
        name: Build multiarch docker image and push
        command: |
          export IMAGETAG=cptmarvel-$CIRCLE_BUILD_NUM
          DOCKER_CLI_EXPERIMENTAL=enabled docker buildx build --platform linux/arm64,linux/amd64 --push -t phyominhtun/hopper-circleci-argocd:$IMAGETAG .

  update_manifest:
    docker:
    - image: cimg/base:2023.06
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Updating Manifest file
        command: "TAG=$CIRCLE_BUILD_NUM\n((TAG--))\ngit clone https://github.com/josephphyo/argocd-app-configs.git\ngit config --global user.email \"phyominhtun1990@gmail.com\"\ngit config --global user.name \"josephphyo\"\npwd\ncd argocd-app-configs\npwd\necho $TAG\nsed -i \"s/cptmarvel-.*/cptmarvel-$TAG/g\" hopper/hopper-v1/hopper-deploy-v1.yaml\ncat hopper/hopper-v1/hopper-deploy-v1.yaml\ngit add .\ngit commit -m \"new build from circleci new imgTag cptmarvel-$TAG\"\ngit config credential.helper 'cache --timeout=120'\ngit push -q https://$GITHUB_PERSONAL_TOKEN@github.com/josephphyo/argocd-app-configs.git main \n#magic___^_^___line\n"
workflows:
  version: 2
  hopper-build-flow:
    jobs:
    - build-and-push:
        filters:
          branches:
            only:
            - multi-arch
    - update_manifest:
        requires:
        - build-and-push
